/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require_tree .
 */

 @import "bootstrap-sprockets";
 @import "bootstrap";
 @import "font-awesome";

 $xs-small-screen:  320px;
 $small-screen:     480px;
 $medium-screen:    768px;
 $large-screen:     992px;
 $xs-large-screen:  1200px;

 // Custom mixins

 @mixin utility-responsive($width) {
   @media only screen and (min-width: $width) { @content; }
 }

// Variables
$font-header:'Century Gothic';
$font-body:'Cochin';
$primary-color: #2ba6cb;
$color-white:#EEE;
$color-dark:#111;

// Styles
body, html {
	font-family: $font-body;
	color:$color-white;
}
h1,h2,h3,h4,h5{
	font-family: $font-header;
	color:$primary-color;
}
ul, li {
  margin: 0;
  padding:0;
}
input{
	color: $color-dark;
}
p{}
h1{font-size:4em;}
h2{font-size:3.25em;}
h3{}
h4{}
h5{}

ul{list-style:none;}

.overlay-bg {
	background-size: cover;
	padding: 20px;
	position:relative;
  margin-left:auto;
  margin-right:auto;
	&::after{
    content: " ";
		position:absolute;
		display:block;
		background: rgba(0,0,0,0.5);
		z-index:2;
		top:0;
		bottom:0;
		left:0;
		right:0;
	}
}
.owl-bg {
  &.big {
    background-image: url('http://placeowl.com/800/600');
  }
  &.med {
    background-image: url('http://placeowl.com/600/400');
  }
  &.sm {
    background-image: url('http://placeowl.com/200/300');
  }
}

.row {
	z-index:20;
	position:relative;
}

.modal-body {
  overflow:auto;
}

.header{}
.footer{}

// @include responsive(wide-screens) { width: 80%; }

@mixin custom-retinize($file, $type, $width, $height) {
  background-image: image-url('' + $file + '.' + $type);

  @media (-webkit-min-device-pixel-ratio: 1.5),
         (min--moz-device-pixel-ratio: 1.5),
         (-o-min-device-pixel-ratio: 3/2),
         (min-device-pixel-ratio: 1.5),
         (min-resolution: 1.5dppx) {
    & {
      background-image: image-url('' + $file + '.' + $type);
      -webkit-background-size: $width $height;
         -moz-background-size: $width $height;
              background-size: $width $height;
    }
  }
}

// how to use @include retinize('icon-dribbble', 'png', 24px, 24px);

@mixin custom-background-body($file, $type) {
    background: image-url('' + $file + '.' + $type) no-repeat center center fixed;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

// how to use @include retinize('icon-dribbble', 'png', 24px, 24px);
@mixin custom-rounded($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}
@mixin custom-shadow($x, $y, $z, $blur, $color) {
  -webkit-box-shadow: $x $y $z $blur $color;
     -moz-box-shadow: $x $y $z $blur $color;
          box-shadow: $x $y $z $blur $color;
}
@mixin custom-shadow-inset($x, $y, $z, $blur, $color) {
  -webkit-box-shadow: inset $x $y $z $blur $color;
     -moz-box-shadow: inset $x $y $z $blur $color;
          box-shadow: inset $x $y $z $blur $color;
}
@mixin custom-transition($property) {
  -webkit-transition: $property .2s ease;
     -moz-transition: $property .2s ease;
       -o-transition: $property .2s ease;
          transition: $property .2s ease;
}
@mixin custom-box-sizing {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
@mixin custom-linear-gradient($from, $to) {
  /* Fallback for sad browsers */
  background-color: $to;
  /* Mozilla Firefox */
  background-image:-moz-linear-gradient($from, $to);
  /* Opera */
  background-image:-o-linear-gradient($from, $to);
  /* WebKit (Chrome 11+) */
  background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to));
  /* WebKit (Safari 5.1+, Chrome 10+) */
  background-image: -webkit-linear-gradient($from, $to);
  /* IE10 */
  background-image: -ms-linear-gradient($from, $to);
  /* W3C */
  background-image: linear-gradient($from, $to);
}

@mixin text-highlight-selection($background, $color) {
    ::selection { background: $background; color: $color; text-shadow: none; }
    ::-webkit-selection{ background: $background; color: $color; text-shadow: none; }
    ::-moz-selection{ background: $background; color: $color; text-shadow: none; }
}

@mixin bootstrap-column($name, $percent-width) {
  $grid-width: $grid-columns * $percent-width / 100;

  .col-lg-#{$name} { @include make-lg-column($grid-width); }
  .col-md-#{$name} { @include make-md-column($grid-width); }
  .col-sm-#{$name} { @include make-sm-column($grid-width); }
  .col-xs-#{$name} { @include make-xs-column($grid-width); }
}

// use @include bootstrap-column(15, 20);
